<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="7" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="122842" started-at="2021-05-23T17:02:53 IST" finished-at="2021-05-23T17:04:56 IST">
    <groups>
      <group name="Regression">
        <method signature="DisplayThreeLowestTravelPlans.displayThreeLowestTravelInsurancePlans(java.util.Hashtable)[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="displayThreeLowestTravelInsurancePlans" class="com.policybazaar.testcases.DisplayThreeLowestTravelPlans"/>
        <method signature="GetErrorInCarInsuranceForm.getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="getErrorForInvalidDetails" class="com.policybazaar.testcases.GetErrorInCarInsuranceForm"/>
        <method signature="GetHealthInsuranceNameList.getInsuranceNameList()[pri:2, instance:com.policybazaar.testcases.GetHealthInsuranceNameList@5891e32e]" name="getInsuranceNameList" class="com.policybazaar.testcases.GetHealthInsuranceNameList"/>
      </group> <!-- Regression -->
    </groups>
    <test name="Test" duration-ms="122842" started-at="2021-05-23T17:02:53 IST" finished-at="2021-05-23T17:04:56 IST">
      <class name="com.policybazaar.testcases.GetHealthInsuranceNameList">
        <test-method status="PASS" signature="getInsuranceNameList()[pri:2, instance:com.policybazaar.testcases.GetHealthInsuranceNameList@5891e32e]" name="getInsuranceNameList" duration-ms="5160" started-at="2021-05-23T17:04:50 IST" finished-at="2021-05-23T17:04:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInsuranceNameList -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.GetHealthInsuranceNameList@5891e32e]" name="flushReports" is-config="true" duration-ms="34" started-at="2021-05-23T17:04:56 IST" finished-at="2021-05-23T17:04:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.policybazaar.testcases.GetHealthInsuranceNameList -->
      <class name="com.policybazaar.testcases.GetErrorInCarInsuranceForm">
        <test-method status="PASS" signature="getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="getErrorForInvalidDetails" duration-ms="14381" started-at="2021-05-23T17:03:59 IST" data-provider="getErrorDetailsTestData" finished-at="2021-05-23T17:04:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Owner Name=Rama Krishna, Owner Phone=9876543210, Fuel Variant=Petrol, RTO & City Name=MH01, Owner Email=ramakrish.com, TestCaseID=TestCase1, Model Variant=2.4, Car Name=HONDA }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="flushReports" is-config="true" duration-ms="56" started-at="2021-05-23T17:04:13 IST" finished-at="2021-05-23T17:04:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="getErrorForInvalidDetails" duration-ms="18473" started-at="2021-05-23T17:04:14 IST" data-provider="getErrorDetailsTestData" finished-at="2021-05-23T17:04:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Owner Name=Rama Raju, Owner Phone=98765, Fuel Variant=Petrol, RTO & City Name=MH02, Owner Email=ram@gmail.com, TestCaseID=TestCase2, Model Variant=1.6, Car Name=HONDA }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="flushReports" is-config="true" duration-ms="41" started-at="2021-05-23T17:04:32 IST" finished-at="2021-05-23T17:04:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="getErrorForInvalidDetails(java.util.Hashtable)[pri:1, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="getErrorForInvalidDetails" duration-ms="18333" started-at="2021-05-23T17:04:32 IST" data-provider="getErrorDetailsTestData" finished-at="2021-05-23T17:04:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Owner Name=sri, Owner Phone=9.87657E+11, Fuel Variant=Petrol, RTO & City Name=MH02, Owner Email=sun@/gmail.co, TestCaseID=TestCase3, Model Variant=2.3, Car Name=HONDA}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.GetErrorInCarInsuranceForm@7a30d1e6]" name="flushReports" is-config="true" duration-ms="48" started-at="2021-05-23T17:04:50 IST" finished-at="2021-05-23T17:04:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.policybazaar.testcases.GetErrorInCarInsuranceForm -->
      <class name="com.policybazaar.testcases.DisplayThreeLowestTravelPlans">
        <test-method status="PASS" signature="displayThreeLowestTravelInsurancePlans(java.util.Hashtable)[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="displayThreeLowestTravelInsurancePlans" duration-ms="22470" started-at="2021-05-23T17:02:53 IST" data-provider="getThreeLowestTravelQuotes" finished-at="2021-05-23T17:03:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Traveller Mail=ramakrishna@gmail.com, Traveller Name=Mr. Koushik, Age2=22, Traveller Phone=9876543210, Age1=21, Country=Germany, TestCaseID=TestCase1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayThreeLowestTravelInsurancePlans -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="flushReports" is-config="true" duration-ms="305" started-at="2021-05-23T17:03:16 IST" finished-at="2021-05-23T17:03:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="displayThreeLowestTravelInsurancePlans(java.util.Hashtable)[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="displayThreeLowestTravelInsurancePlans" duration-ms="21461" started-at="2021-05-23T17:03:16 IST" data-provider="getThreeLowestTravelQuotes" finished-at="2021-05-23T17:03:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Traveller Mail=sundarbently@gmail.com, Traveller Name=Mr. suresh, Age2=21, Traveller Phone=9879876565, Age1=23, Country=France, TestCaseID=TestCase2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayThreeLowestTravelInsurancePlans -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="flushReports" is-config="true" duration-ms="65" started-at="2021-05-23T17:03:38 IST" finished-at="2021-05-23T17:03:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="displayThreeLowestTravelInsurancePlans(java.util.Hashtable)[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="displayThreeLowestTravelInsurancePlans" duration-ms="21284" started-at="2021-05-23T17:03:38 IST" data-provider="getThreeLowestTravelQuotes" finished-at="2021-05-23T17:03:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Traveller Mail=ramaganga@gmail.com, Traveller Name=Mr. policy, Age2=21, Traveller Phone=9876543210, Age1=21, Country=Spain, TestCaseID=TestCase3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayThreeLowestTravelInsurancePlans -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.policybazaar.testcases.DisplayThreeLowestTravelPlans@553a3d88]" name="flushReports" is-config="true" duration-ms="68" started-at="2021-05-23T17:03:59 IST" finished-at="2021-05-23T17:03:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.policybazaar.testcases.DisplayThreeLowestTravelPlans -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
